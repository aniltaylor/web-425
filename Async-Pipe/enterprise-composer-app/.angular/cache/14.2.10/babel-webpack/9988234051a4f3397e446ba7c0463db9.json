{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../composer.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\n\nfunction ComposerListComponent_tbody_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\", 8)(3, \"a\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const composer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/composer-details/\", composer_r1.composerId, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", composer_r1.composerId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(composer_r1.fullName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(composer_r1.genre);\n  }\n}\n\nexport class ComposerListComponent {\n  constructor(composerService) {\n    this.composerService = composerService;\n    this.txtSearchControl = new FormControl('');\n    this.composers = this.composerService.getComposers();\n    this.txtSearchControl.valueChanges.pipe(debounceTime(500)).subscribe(val => this.filterComposers(val));\n  }\n\n  ngOnInit() {}\n\n  filterComposers(name) {\n    this.composers = this.composerService.filterComposers(name);\n  }\n\n}\n\nComposerListComponent.ɵfac = function ComposerListComponent_Factory(t) {\n  return new (t || ComposerListComponent)(i0.ɵɵdirectiveInject(i1.ComposerService));\n};\n\nComposerListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ComposerListComponent,\n  selectors: [[\"app-composer-list\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[1, \"row\"], [1, \"col-sm-12\"], [1, \"txtSearch\"], [\"type\", \"text\", \"id\", \"txtSearch\", \"placeholder\", \"Search by name\", 1, \"form-control\", 3, \"formControl\"], [1, \"table\", \"table-bordered\"], [1, \"thead-dark\"], [\"scope\", \"col\", 2, \"background-color\", \"black\", \"color\", \"white\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [3, \"routerLink\"]],\n  template: function ComposerListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 4)(5, \"thead\", 5)(6, \"tr\")(7, \"th\", 6);\n      i0.ɵɵtext(8, \" Composer ID \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 6);\n      i0.ɵɵtext(10, \" Full name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 6);\n      i0.ɵɵtext(12, \" Genre \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(13, ComposerListComponent_tbody_13_Template, 9, 4, \"tbody\", 7);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.txtSearchControl);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 2, ctx.composers));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLinkWithHref, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i2.AsyncPipe],\n  styles: [\".txtSearch[_ngcontent-%COMP%] {\\r\\n    width: 30%;\\r\\n    float: right;\\r\\n    margin-bottom: 5px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvc2VyLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixZQUFZO0lBQ1osa0JBQWtCO0VBQ3BCIiwiZmlsZSI6ImNvbXBvc2VyLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50eHRTZWFyY2gge1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICB9Il19 */\"]\n});","map":{"version":3,"mappings":"AAYC,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;;;;;;;ICoBKC,8BAAkD,CAAlD,EAAkD,IAAlD,EAAkD,CAAlD,EAAkD,IAAlD,EAAkD,CAAlD,EAAkD,CAAlD,EAAkD,GAAlD,EAAkD,CAAlD;IAMQA;IACFA;IAEFA;IAAIA;IAAuBA;IAC3BA;IAAIA;IAAoBA;;;;;IALnBA;IAAAA;IACDA;IAAAA;IAGAA;IAAAA;IACAA;IAAAA;;;;ADtBb,OAAM,MAAOC,qBAAP,CAA4B;EAKhCC,YAAoBC,eAApB,EAAoD;IAAhC;IAFpB,wBAAmB,IAAIL,WAAJ,CAAgB,EAAhB,CAAnB;IAGE,KAAKM,SAAL,GAAiB,KAAKD,eAAL,CAAqBE,YAArB,EAAjB;IAEA,KAAKC,gBAAL,CAAsBC,YAAtB,CAAmCC,IAAnC,CAAwCT,YAAY,CAAC,GAAD,CAApD,EAA2DU,SAA3D,CAAqEC,GAAG,IAAI,KAAKC,eAAL,CAAqBD,GAArB,CAA5E;EACD;;EAEDE,QAAQ,IACP;;EAEDD,eAAe,CAACE,IAAD,EAAa;IAC1B,KAAKT,SAAL,GAAiB,KAAKD,eAAL,CAAqBQ,eAArB,CAAqCE,IAArC,CAAjB;EACD;;AAhB+B;;;mBAArBZ,uBAAqBD;AAAA;;;QAArBC;EAAqBa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdnClB,+BAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB;MAIMA;MAOFA;MACAA,iCAAoC,CAApC,EAAoC,OAApC,EAAoC,CAApC,EAAoC,CAApC,EAAoC,IAApC,EAAoC,CAApC,EAAoC,IAApC,EAAoC,CAApC;MAIQA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MAGJA;;MAaFA;;;;MA/BIA;MAAAA;MAkB0BA;MAAAA","names":["FormControl","debounceTime","i0","ComposerListComponent","constructor","composerService","composers","getComposers","txtSearchControl","valueChanges","pipe","subscribe","val","filterComposers","ngOnInit","name","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\taylor pc\\buwebdev\\web-425\\week-4\\enterprise-composer-app\\src\\app\\composer-list\\composer-list.component.ts","C:\\Users\\taylor pc\\buwebdev\\web-425\\week-4\\enterprise-composer-app\\src\\app\\composer-list\\composer-list.component.html"],"sourcesContent":["/*\r\n Title: composer-list.component.ts\r\n Author: Professor Krasso\r\n Modified By: Anita Taylor\r\n Date: 10/26/2022\r\n Description:  Composer list component (Composer list view)\r\n */\r\n\r\n\r\n import { Component, OnInit } from '@angular/core';\r\n import { IComposer } from '../composer.interface';\r\n import { ComposerService } from '../composer.service';\r\n import { FormControl } from '@angular/forms';\r\n import { debounceTime } from 'rxjs/operators';\r\n import { Observable } from 'rxjs';\r\n \r\n @Component({\r\n   selector: 'app-composer-list',\r\n   templateUrl: './composer-list.component.html',\r\n   styleUrls: ['./composer-list.component.css']\r\n })\r\n export class ComposerListComponent implements OnInit {\r\n \r\n   composers: Observable<IComposer[]>;\r\n   txtSearchControl = new FormControl('');\r\n \r\n   constructor(private composerService: ComposerService) {\r\n     this.composers = this.composerService.getComposers();\r\n \r\n     this.txtSearchControl.valueChanges.pipe(debounceTime(500)).subscribe(val => this.filterComposers(val));\r\n   }\r\n \r\n   ngOnInit(): void {\r\n   }\r\n \r\n   filterComposers(name: string) {\r\n     this.composers = this.composerService.filterComposers(name);\r\n   }\r\n }","<!--\r\n Title: composer-list.component.html\r\n Author: Professor Krasso\r\n Modified By: Anita Taylor\r\n Date: 10/26/2022\r\n Description: Exercise 2.4 – Routing in Action - composer-list.component.html\r\n-->\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <!-- search bar -->\r\n    <div class=\"txtSearch\">\r\n      <input\r\n        type=\"text\"\r\n        id=\"txtSearch\"\r\n        class=\"form-control\"\r\n        [formControl]=\"txtSearchControl\"\r\n        placeholder=\"Search by name\"\r\n      />\r\n    </div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\" style=\"background-color: black; color: white\">\r\n            Composer ID\r\n          </th>\r\n          <th scope=\"col\" style=\"background-color: black; color: white\">\r\n            Full name\r\n          </th>\r\n          <th scope=\"col\" style=\"background-color: black; color: white\">\r\n            Genre\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngFor=\"let composer of composers | async\">\r\n        <tr>\r\n          <td scope=\"row\">\r\n            <!-- for loop id on link -->\r\n            <!-- data display composer id in html -->\r\n            <a routerLink=\"/composer-details/{{ composer.composerId }}\">\r\n              {{ composer.composerId }}\r\n            </a>\r\n          </td>\r\n          <td>{{ composer.fullName }}</td>\r\n          <td>{{ composer.genre }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module"}